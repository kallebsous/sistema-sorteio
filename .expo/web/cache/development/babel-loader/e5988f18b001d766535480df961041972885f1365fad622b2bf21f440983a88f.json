{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport TelaInicial from \"./telas/TelaInicial\";\nimport TelaSimulacao from \"./telas/TelaSimulacao\";\nimport TelaGerenciadorProcessos from \"./telas/TelaGerenciadorProcessos\";\nimport TelaConfiguracoes from \"./telas/TelaConfiguracoes\";\nimport TelaTutorial from \"./telas/TelaTutorial\";\nimport TelaResultados from \"./telas/TelaResultados\";\nimport TelaProcessosFinalizados from \"./telas/TelaProcessosFinalizados\";\nimport { ProvedorEscalonador } from \"./contexto/ContextoEscalonador\";\nimport { ProvedorTema } from \"./contexto/ContextoTema\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Pilha = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(GestureHandlerRootView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(ProvedorTema, {\n        children: _jsx(ProvedorEscalonador, {\n          children: _jsxs(NavigationContainer, {\n            children: [_jsx(StatusBar, {\n              style: \"auto\"\n            }), _jsxs(Pilha.Navigator, {\n              initialRouteName: \"Inicial\",\n              screenOptions: function screenOptions(_ref) {\n                var route = _ref.route;\n                return {\n                  headerStyle: {\n                    backgroundColor: \"#6200ee\"\n                  },\n                  headerTintColor: \"#fff\",\n                  headerTitleStyle: {\n                    fontWeight: \"bold\"\n                  },\n                  animation: \"slide_from_right\"\n                };\n              },\n              children: [_jsx(Pilha.Screen, {\n                name: \"Inicial\",\n                component: TelaInicial,\n                options: {\n                  title: \"Escalonador de Loteria\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"GerenciadorProcessos\",\n                component: TelaGerenciadorProcessos,\n                options: {\n                  title: \"Gerenciador de Processos\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"Simulacao\",\n                component: TelaSimulacao,\n                options: {\n                  title: \"Simulação\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"Resultados\",\n                component: TelaResultados,\n                options: {\n                  title: \"Resultados da Simulação\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"ProcessosFinalizados\",\n                component: TelaProcessosFinalizados,\n                options: {\n                  title: \"Processos Finalizados\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"Tutorial\",\n                component: TelaTutorial,\n                options: {\n                  title: \"Como Funciona\"\n                }\n              }), _jsx(Pilha.Screen, {\n                name: \"Configuracoes\",\n                component: TelaConfiguracoes,\n                options: {\n                  title: \"Configurações\"\n                }\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","SafeAreaProvider","GestureHandlerRootView","StatusBar","TelaInicial","TelaSimulacao","TelaGerenciadorProcessos","TelaConfiguracoes","TelaTutorial","TelaResultados","TelaProcessosFinalizados","ProvedorEscalonador","ProvedorTema","jsx","_jsx","jsxs","_jsxs","Pilha","App","style","flex","children","Navigator","initialRouteName","screenOptions","_ref","route","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","animation","Screen","name","component","options","title"],"sources":["C:/Users/kalle/Downloads/sistema-sorteio/App.tsx"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport { SafeAreaProvider } from \"react-native-safe-area-context\"\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\"\nimport { StatusBar } from \"expo-status-bar\"\n\n// Telas\nimport TelaInicial from \"./telas/TelaInicial\"\nimport TelaSimulacao from \"./telas/TelaSimulacao\"\nimport TelaGerenciadorProcessos from \"./telas/TelaGerenciadorProcessos\"\nimport TelaConfiguracoes from \"./telas/TelaConfiguracoes\"\nimport TelaTutorial from \"./telas/TelaTutorial\"\nimport TelaResultados from \"./telas/TelaResultados\"\nimport TelaProcessosFinalizados from \"./telas/TelaProcessosFinalizados\"\n\n// Contexto\nimport { ProvedorEscalonador } from \"./contexto/ContextoEscalonador\"\nimport { ProvedorTema } from \"./contexto/ContextoTema\"\n\nconst Pilha = createNativeStackNavigator()\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <ProvedorTema>\n          <ProvedorEscalonador>\n            <NavigationContainer>\n              <StatusBar style=\"auto\" />\n              <Pilha.Navigator\n                initialRouteName=\"Inicial\"\n                screenOptions={({ route }) => ({\n                  headerStyle: {\n                    backgroundColor: \"#6200ee\",\n                  },\n                  headerTintColor: \"#fff\",\n                  headerTitleStyle: {\n                    fontWeight: \"bold\",\n                  },\n                  animation: \"slide_from_right\",\n                })}\n              >\n                <Pilha.Screen name=\"Inicial\" component={TelaInicial} options={{ title: \"Escalonador de Loteria\" }} />\n                <Pilha.Screen\n                  name=\"GerenciadorProcessos\"\n                  component={TelaGerenciadorProcessos}\n                  options={{ title: \"Gerenciador de Processos\" }}\n                />\n                <Pilha.Screen name=\"Simulacao\" component={TelaSimulacao} options={{ title: \"Simulação\" }} />\n                <Pilha.Screen\n                  name=\"Resultados\"\n                  component={TelaResultados}\n                  options={{ title: \"Resultados da Simulação\" }}\n                />\n                <Pilha.Screen\n                  name=\"ProcessosFinalizados\"\n                  component={TelaProcessosFinalizados}\n                  options={{ title: \"Processos Finalizados\" }}\n                />\n                <Pilha.Screen name=\"Tutorial\" component={TelaTutorial} options={{ title: \"Como Funciona\" }} />\n                <Pilha.Screen name=\"Configuracoes\" component={TelaConfiguracoes} options={{ title: \"Configurações\" }} />\n              </Pilha.Navigator>\n            </NavigationContainer>\n          </ProvedorEscalonador>\n        </ProvedorTema>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}