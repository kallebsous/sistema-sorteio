{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport \"../layoutReanimation/animationsManager.js\";\nimport invariant from 'invariant';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getReduceMotionFromConfig } from \"../animation/util.js\";\nimport { maybeBuild } from \"../animationBuilder.js\";\nimport { LayoutAnimationType } from \"../commonTypes.js\";\nimport { SkipEnteringContext } from \"../component/LayoutAnimationConfig.js\";\nimport { adaptViewConfig } from \"../ConfigHelper.js\";\nimport { enableLayoutAnimations, markNodeAsRemovable, unmarkNodeAsRemovable } from \"../core.js\";\nimport { ReanimatedError } from \"../errors.js\";\nimport { getShadowNodeWrapperFromRef } from \"../fabricUtils\";\nimport { SharedTransition } from \"../layoutReanimation/index.js\";\nimport { configureWebLayoutAnimations, getReducedMotionFromConfig, saveSnapshot, startWebLayoutAnimation, tryActivateLayoutTransition } from \"../layoutReanimation/web/index.js\";\nimport { addHTMLMutationObserver } from \"../layoutReanimation/web/domUtils.js\";\nimport { findHostInstance } from \"../platform-specific/findHostInstance\";\nimport { isFabric, isJest, isReact19, isWeb, shouldBeUseWeb } from \"../PlatformChecker.js\";\nimport { componentWithRef } from \"../reactUtils.js\";\nimport { updateLayoutAnimations } from \"../UpdateLayoutAnimations.js\";\nimport { getViewInfo } from \"./getViewInfo.js\";\nimport { InlinePropManager } from \"./InlinePropManager.js\";\nimport JSPropsUpdater from \"./JSPropsUpdater\";\nimport { NativeEventsManager } from \"./NativeEventsManager.js\";\nimport { PropsFilter } from \"./PropsFilter.js\";\nimport setAndForwardRef from \"./setAndForwardRef.js\";\nimport { flattenArray } from \"./utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar IS_WEB = isWeb();\nvar IS_JEST = isJest();\nvar IS_REACT_19 = isReact19();\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style == null ? void 0 : style.viewDescriptors;\n  });\n}\nvar id = 0;\nexport function createAnimatedComponent(Component, options) {\n  if (!IS_REACT_19) {\n    invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  }\n  var AnimatedComponent = function (_React$Component) {\n    function AnimatedComponent(props) {\n      var _this$context2, _this$props4;\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _this._styles = null;\n      _this._isFirstRender = true;\n      _this.jestAnimatedStyle = {\n        value: {}\n      };\n      _this.jestAnimatedProps = {\n        value: {}\n      };\n      _this._componentRef = null;\n      _this._hasAnimatedRef = false;\n      _this._componentDOMRef = null;\n      _this._sharedElementTransition = null;\n      _this._jsPropsUpdater = new JSPropsUpdater();\n      _this._InlinePropManager = new InlinePropManager();\n      _this._PropsFilter = new PropsFilter();\n      _this.reanimatedID = id++;\n      _this._willUnmount = false;\n      _this._resolveComponentRef = function (ref) {\n        var componentRef = ref;\n        if (componentRef && componentRef.getAnimatableRef) {\n          _this._hasAnimatedRef = true;\n          return componentRef.getAnimatableRef();\n        }\n        if (SHOULD_BE_USE_WEB) {\n          if (componentRef && componentRef.elementRef) {\n            _this._componentDOMRef = componentRef.elementRef.current;\n          } else {\n            _this._componentDOMRef = ref;\n          }\n        }\n        return componentRef;\n      };\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          if (!ref) {\n            return;\n          }\n          if (ref !== _this._componentRef) {\n            _this._componentRef = _this._resolveComponentRef(ref);\n            _this._viewInfo = undefined;\n          }\n          var tag = _this.getComponentViewTag();\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if (layout || entering || exiting || sharedTransitionTag) {\n            var _this$context;\n            if (!SHOULD_BE_USE_WEB) {\n              enableLayoutAnimations(true, false);\n            }\n            if (sharedTransitionTag) {\n              _this._configureSharedTransition();\n            }\n            if (exiting && isFabric()) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n              if (!reduceMotionInExiting) {\n                var _this$props2;\n                updateLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props2 = _this.props) == null ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n              }\n            }\n            var skipEntering = (_this$context = _this.context) == null ? void 0 : _this$context.current;\n            if (entering && !isFabric() && !skipEntering && !IS_WEB) {\n              var _this$props3;\n              updateLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering, (_this$props3 = _this.props) == null ? void 0 : _this$props3.style, AnimatedComponent.displayName));\n            }\n          }\n        }\n      });\n      if (IS_JEST) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n        _this.jestAnimatedProps = {\n          value: {}\n        };\n      }\n      var _entering = _this.props.entering;\n      var _skipEntering = (_this$context2 = _this.context) == null ? void 0 : _this$context2.current;\n      if (!_entering || getReducedMotionFromConfig(_entering) || _skipEntering || !isFabric()) {\n        return _possibleConstructorReturn(_this);\n      }\n      updateLayoutAnimations(_this.reanimatedID, LayoutAnimationType.ENTERING, maybeBuild(_entering, (_this$props4 = _this.props) == null ? void 0 : _this$props4.style, AnimatedComponent.displayName));\n      return _this;\n    }\n    _inherits(AnimatedComponent, _React$Component);\n    return _createClass(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this$_NativeEventsMa, _this$_viewInfo;\n        if (!IS_WEB) {\n          this._NativeEventsManager = new NativeEventsManager(this, options);\n        }\n        (_this$_NativeEventsMa = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa.attachEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          var _this$context3;\n          if (this.props.exiting && this._componentDOMRef) {\n            saveSnapshot(this._componentDOMRef);\n          }\n          if (!this.props.entering || getReducedMotionFromConfig(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          var skipEntering = (_this$context3 = this.context) == null ? void 0 : _this$context3.current;\n          if (!skipEntering) {\n            startWebLayoutAnimation(this.props, this._componentDOMRef, LayoutAnimationType.ENTERING);\n          } else if (this._componentDOMRef) {\n            this._componentDOMRef.style.visibility = 'initial';\n          }\n        }\n        var viewTag = (_this$_viewInfo = this._viewInfo) == null ? void 0 : _this$_viewInfo.viewTag;\n        if (!SHOULD_BE_USE_WEB && isFabric() && this._willUnmount && typeof viewTag === 'number') {\n          unmarkNodeAsRemovable(viewTag);\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_NativeEventsMa2, _this$_sharedElementT, _this$_viewInfo2;\n        (_this$_NativeEventsMa2 = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa2.detachEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        if (this.props.sharedTransitionTag) {\n          this._configureSharedTransition(true);\n        }\n        (_this$_sharedElementT = this._sharedElementTransition) == null ? void 0 : _this$_sharedElementT.unregisterTransition(this.getComponentViewTag(), true);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this._componentDOMRef && exiting && !getReducedMotionFromConfig(exiting)) {\n          addHTMLMutationObserver();\n          startWebLayoutAnimation(this.props, this._componentDOMRef, LayoutAnimationType.EXITING);\n        } else if (exiting && !IS_WEB && !isFabric()) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n          if (!reduceMotionInExiting) {\n            var _this$props5;\n            updateLayoutAnimations(this.getComponentViewTag(), LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props5 = this.props) == null ? void 0 : _this$props5.style, AnimatedComponent.displayName));\n          }\n        }\n        var wrapper = (_this$_viewInfo2 = this._viewInfo) == null ? void 0 : _this$_viewInfo2.shadowNodeWrapper;\n        if (!SHOULD_BE_USE_WEB && isFabric() && wrapper) {\n          markNodeAsRemovable(wrapper);\n        }\n        this._willUnmount = true;\n      }\n    }, {\n      key: \"getComponentViewTag\",\n      value: function getComponentViewTag() {\n        return this._getViewInfo().viewTag;\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        var viewTag = this.getComponentViewTag();\n        if (viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var style of this._styles) {\n            style.viewDescriptors.remove(viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) != null && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options != null && options.setNativeProps) {\n          options.setNativeProps(this._componentRef, props);\n        } else {\n          var _this$_componentRef;\n          (_this$_componentRef = this._componentRef) == null ? void 0 : _this$_componentRef.setNativeProps == null ? void 0 : _this$_componentRef.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var DOMElement = null;\n        if (SHOULD_BE_USE_WEB) {\n          viewTag = this._componentRef;\n          DOMElement = this._componentDOMRef;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var hostInstance = findHostInstance(this);\n          if (!hostInstance) {\n            throw new ReanimatedError('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          var viewInfo = getViewInfo(hostInstance);\n          viewTag = viewInfo.viewTag;\n          viewName = viewInfo.viewName;\n          viewConfig = viewInfo.viewConfig;\n          shadowNodeWrapper = isFabric() ? getShadowNodeWrapperFromRef(this, hostInstance) : null;\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        if (DOMElement) {\n          this._viewInfo.DOMElement = DOMElement;\n        }\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this$props$animatedP2,\n          _this2 = this,\n          _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var animatedProps = this.props.animatedProps;\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) == null ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && styles[0] === prevStyles[0];\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return style === prevStyle;\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        if (animatedProps && IS_JEST) {\n          var _animatedProps$initia;\n          this.jestAnimatedProps.value = _objectSpread(_objectSpread({}, this.jestAnimatedProps.value), animatedProps == null ? void 0 : (_animatedProps$initia = animatedProps.initial) == null ? void 0 : _animatedProps$initia.value);\n          if (animatedProps != null && animatedProps.jestAnimatedValues) {\n            animatedProps.jestAnimatedValues.current = this.jestAnimatedProps;\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (IS_JEST) {\n            _this2.jestAnimatedStyle.value = _objectSpread(_objectSpread({}, _this2.jestAnimatedStyle.value), style.initial.value);\n            style.jestAnimatedValues.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) != null && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var _this$_NativeEventsMa3;\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        if (this.props.sharedTransitionTag !== undefined || prevProps.sharedTransitionTag !== undefined) {\n          this._configureSharedTransition();\n        }\n        (_this$_NativeEventsMa3 = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa3.updateEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting && this._componentDOMRef) {\n          saveSnapshot(this._componentDOMRef);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !getReducedMotionFromConfig(this.props.layout)) {\n          tryActivateLayoutTransition(this.props, this._componentDOMRef, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        if (IS_WEB) {\n          return;\n        }\n        var layout = this.props.layout;\n        if (layout && getReducedMotionFromConfig(layout)) {\n          return;\n        }\n        updateLayoutAnimations(this.getComponentViewTag(), LayoutAnimationType.LAYOUT, layout && maybeBuild(layout, undefined, AnimatedComponent.displayName));\n      }\n    }, {\n      key: \"_configureSharedTransition\",\n      value: function _configureSharedTransition() {\n        var _ref, _this$props$sharedTra;\n        var isUnmounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (IS_WEB) {\n          return;\n        }\n        var sharedTransitionTag = this.props.sharedTransitionTag;\n        if (!sharedTransitionTag) {\n          var _this$_sharedElementT2;\n          (_this$_sharedElementT2 = this._sharedElementTransition) == null ? void 0 : _this$_sharedElementT2.unregisterTransition(this.getComponentViewTag(), isUnmounting);\n          this._sharedElementTransition = null;\n          return;\n        }\n        var sharedElementTransition = (_ref = (_this$props$sharedTra = this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : this._sharedElementTransition) != null ? _ref : new SharedTransition();\n        sharedElementTransition.registerTransition(this.getComponentViewTag(), sharedTransitionTag, isUnmounting);\n        this._sharedElementTransition = sharedElementTransition;\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_componentDOMRe;\n        if (IS_WEB && ((_this$_componentDOMRe = this._componentDOMRef) == null ? void 0 : _this$_componentDOMRe.getBoundingClientRect) !== undefined) {\n          return this._componentDOMRef.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$context4;\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if (IS_JEST) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n          filteredProps.jestAnimatedProps = this.jestAnimatedProps;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !getReducedMotionFromConfig(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = Array.isArray(filteredProps.style) ? filteredProps.style.concat([{\n            visibility: 'hidden'\n          }]) : _objectSpread(_objectSpread({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}), {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        var skipEntering = (_this$context4 = this.context) == null ? void 0 : _this$context4.current;\n        var nativeID = skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n        var jestProps = IS_JEST ? {\n          jestInlineStyle: this.props.style,\n          jestAnimatedStyle: this.jestAnimatedStyle,\n          jestAnimatedProps: this.jestAnimatedProps\n        } : {};\n        return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({\n          nativeID: nativeID\n        }, filteredProps), jestProps), {}, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n  }(React.Component);\n  AnimatedComponent.contextType = SkipEnteringContext;\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  var animatedComponent = componentWithRef(function (props, ref) {\n    return _jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n  animatedComponent.displayName = Component.displayName || Component.name || 'Component';\n  return animatedComponent;\n}","map":{"version":3,"names":["_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","invariant","React","Platform","getReduceMotionFromConfig","maybeBuild","LayoutAnimationType","SkipEnteringContext","adaptViewConfig","enableLayoutAnimations","markNodeAsRemovable","unmarkNodeAsRemovable","ReanimatedError","getShadowNodeWrapperFromRef","SharedTransition","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","startWebLayoutAnimation","tryActivateLayoutTransition","addHTMLMutationObserver","findHostInstance","isFabric","isJest","isReact19","isWeb","shouldBeUseWeb","componentWithRef","updateLayoutAnimations","getViewInfo","InlinePropManager","JSPropsUpdater","NativeEventsManager","PropsFilter","setAndForwardRef","flattenArray","jsx","_jsx","IS_WEB","IS_JEST","IS_REACT_19","SHOULD_BE_USE_WEB","onlyAnimatedStyles","styles","style","viewDescriptors","id","createAnimatedComponent","Component","options","isReactComponent","name","AnimatedComponent","_React$Component","props","_this$context2","_this$props4","_this","_styles","_isFirstRender","jestAnimatedStyle","value","jestAnimatedProps","_componentRef","_hasAnimatedRef","_componentDOMRef","_sharedElementTransition","_jsPropsUpdater","_InlinePropManager","_PropsFilter","reanimatedID","_willUnmount","_resolveComponentRef","ref","componentRef","getAnimatableRef","elementRef","current","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","_viewInfo","undefined","tag","getComponentViewTag","_this$props","layout","entering","exiting","sharedTransitionTag","_this$context","_configureSharedTransition","reduceMotionInExiting","getReduceMotion","_this$props2","EXITING","displayName","skipEntering","context","_this$props3","ENTERING","key","componentDidMount","_this$_NativeEventsMa","_this$_viewInfo","_NativeEventsManager","attachEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","_configureLayoutTransition","_this$context3","visibility","viewTag","componentWillUnmount","_this$_NativeEventsMa2","_this$_sharedElementT","_this$_viewInfo2","detachEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","_this$props5","wrapper","shadowNodeWrapper","_this$props$animatedP","remove","animatedProps","_updateFromNative","setNativeProps","_this$_componentRef","viewName","viewConfig","DOMElement","hostInstance","viewInfo","_this$props$animatedP2","_this2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","some","_animatedProps$initia","initial","jestAnimatedValues","add","componentDidUpdate","prevProps","_prevState","snapshot","_this$_NativeEventsMa3","oldLayout","updateEvents","LAYOUT","_ref","_this$props$sharedTra","isUnmounting","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","registerTransition","getSnapshotBeforeUpdate","_this$_componentDOMRe","getBoundingClientRect","render","_this$context4","filteredProps","filterNonAnimatedProps","_filteredProps$style","Array","isArray","concat","platformProps","select","web","default","collapsable","nativeID","jestProps","jestInlineStyle","contextType","animatedComponent"],"sources":["C:\\Users\\kalle\\Downloads\\sistema-sorteio\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport '../layoutReanimation/animationsManager';\n\nimport invariant from 'invariant';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  PropsWithoutRef,\n  Ref,\n  RefObject,\n} from 'react';\nimport React from 'react';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { Platform } from 'react-native';\n\nimport { getReduceMotionFromConfig } from '../animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport type { ShadowNodeWrapper, StyleProps } from '../commonTypes';\nimport { LayoutAnimationType } from '../commonTypes';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport {\n  enableLayoutAnimations,\n  markNodeAsRemovable,\n  unmarkNodeAsRemovable,\n} from '../core';\nimport { ReanimatedError } from '../errors';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport type { AnimateProps } from '../helperTypes';\nimport { SharedTransition } from '../layoutReanimation';\nimport {\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n} from '../layoutReanimation/web';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport { findHostInstance } from '../platform-specific/findHostInstance';\nimport {\n  isFabric,\n  isJest,\n  isReact19,\n  isWeb,\n  shouldBeUseWeb,\n} from '../PlatformChecker';\nimport { componentWithRef } from '../reactUtils';\nimport type { ReanimatedHTMLElement } from '../ReanimatedModule/js-reanimated';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type {\n  AnimatedComponentProps,\n  AnimatedComponentRef,\n  AnimatedProps,\n  IAnimatedComponentInternal,\n  INativeEventsManager,\n  InitialComponentProps,\n  NestedArray,\n  ViewInfo,\n} from './commonTypes';\nimport { getViewInfo } from './getViewInfo';\nimport { InlinePropManager } from './InlinePropManager';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport { PropsFilter } from './PropsFilter';\nimport setAndForwardRef from './setAndForwardRef';\nimport { flattenArray } from './utils';\n\nconst IS_WEB = isWeb();\nconst IS_JEST = isJest();\nconst IS_REACT_19 = isReact19();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling\n *   `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nlet id = 0;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  if (!IS_REACT_19) {\n    invariant(\n      typeof Component !== 'function' ||\n        (Component.prototype && Component.prototype.isReactComponent),\n      `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n    );\n  }\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _isFirstRender = true;\n    jestInlineStyle: NestedArray<StyleProps> | undefined;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    jestAnimatedProps: { value: AnimatedProps } = { value: {} };\n    _componentRef: AnimatedComponentRef | HTMLElement | null = null;\n    _hasAnimatedRef = false;\n    // Used only on web\n    _componentDOMRef: HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _NativeEventsManager?: INativeEventsManager;\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n    reanimatedID = id++;\n    _willUnmount: boolean = false;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (IS_JEST) {\n        this.jestAnimatedStyle = { value: {} };\n        this.jestAnimatedProps = { value: {} };\n      }\n\n      const entering = this.props.entering;\n      const skipEntering = this.context?.current;\n      if (\n        !entering ||\n        getReducedMotionFromConfig(entering as CustomConfig) ||\n        skipEntering ||\n        !isFabric()\n      ) {\n        return;\n      }\n      // This call is responsible for configuring entering animations on Fabric.\n      updateLayoutAnimations(\n        this.reanimatedID,\n        LayoutAnimationType.ENTERING,\n        maybeBuild(entering, this.props?.style, AnimatedComponent.displayName)\n      );\n    }\n\n    componentDidMount() {\n      if (!IS_WEB) {\n        // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n        this._NativeEventsManager = new NativeEventsManager(this, options);\n      }\n      this._NativeEventsManager?.attachEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting && this._componentDOMRef) {\n          saveSnapshot(this._componentDOMRef);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        const skipEntering = this.context?.current;\n\n        if (!skipEntering) {\n          startWebLayoutAnimation(\n            this.props,\n            this._componentDOMRef as ReanimatedHTMLElement,\n            LayoutAnimationType.ENTERING\n          );\n        } else if (this._componentDOMRef) {\n          this._componentDOMRef.style.visibility = 'initial';\n        }\n      }\n\n      const viewTag = this._viewInfo?.viewTag;\n      if (\n        !SHOULD_BE_USE_WEB &&\n        isFabric() &&\n        this._willUnmount &&\n        typeof viewTag === 'number'\n      ) {\n        unmarkNodeAsRemovable(viewTag);\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._NativeEventsManager?.detachEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this.getComponentViewTag(),\n        true\n      );\n\n      const exiting = this.props.exiting;\n\n      if (\n        IS_WEB &&\n        this._componentDOMRef &&\n        exiting &&\n        !getReducedMotionFromConfig(exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._componentDOMRef as ReanimatedHTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting && !IS_WEB && !isFabric()) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this.getComponentViewTag(),\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n\n      const wrapper = this._viewInfo?.shadowNodeWrapper;\n      if (!SHOULD_BE_USE_WEB && isFabric() && wrapper) {\n        // Mark node as removable on the native (C++) side, but only actually remove it\n        // when it no longer exists in the Shadow Tree. This ensures proper cleanup of\n        // animations/transitions/props while handling cases where the node might be\n        // remounted (e.g., when frozen) after componentWillUnmount is called.\n        markNodeAsRemovable(wrapper);\n      }\n\n      this._willUnmount = true;\n    }\n\n    getComponentViewTag() {\n      return this._getViewInfo().viewTag as number;\n    }\n\n    _detachStyles() {\n      const viewTag = this.getComponentViewTag();\n      if (viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(viewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(\n          this._componentRef as AnimatedComponentRef,\n          props\n        );\n      } else {\n        (this._componentRef as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | typeof this._componentRef;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      let DOMElement: HTMLElement | null = null;\n\n      if (SHOULD_BE_USE_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._componentRef;\n        DOMElement = this._componentDOMRef;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        const hostInstance = findHostInstance(this);\n        if (!hostInstance) {\n          /* \n            findHostInstance can return null for a component that doesn't render anything \n            (render function returns null). Example: \n            svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n          */\n          throw new ReanimatedError(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this, hostInstance)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      if (DOMElement) {\n        this._viewInfo.DOMElement = DOMElement;\n      }\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const animatedProps = this.props.animatedProps;\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      if (animatedProps && IS_JEST) {\n        this.jestAnimatedProps.value = {\n          ...this.jestAnimatedProps.value,\n          ...animatedProps?.initial?.value,\n        };\n\n        if (animatedProps?.jestAnimatedValues) {\n          animatedProps.jestAnimatedValues.current = this.jestAnimatedProps;\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (IS_JEST) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just\n           * props object with the updateProps() function where we update the\n           * properties of the component. We can't update props object directly\n           * because TestObject contains a copy of props - look at render\n           * function: const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedValues.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._NativeEventsManager?.updateEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting && this._componentDOMRef) {\n        saveSnapshot(this._componentDOMRef);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._componentDOMRef as ReanimatedHTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      if (IS_WEB) {\n        return;\n      }\n\n      const layout = this.props.layout;\n      if (layout && getReducedMotionFromConfig(layout as CustomConfig)) {\n        return;\n      }\n      updateLayoutAnimations(\n        this.getComponentViewTag(),\n        LayoutAnimationType.LAYOUT,\n        layout &&\n          maybeBuild(\n            layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this.getComponentViewTag(),\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this.getComponentViewTag(),\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _resolveComponentRef = (ref: Component | HTMLElement | null) => {\n      const componentRef = ref as AnimatedComponentRef;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      if (componentRef && componentRef.getAnimatableRef) {\n        this._hasAnimatedRef = true;\n        return componentRef.getAnimatableRef();\n      }\n      // Case for SVG components on Web\n      if (SHOULD_BE_USE_WEB) {\n        if (componentRef && componentRef.elementRef) {\n          this._componentDOMRef = componentRef.elementRef.current;\n        } else {\n          this._componentDOMRef = ref as HTMLElement;\n        }\n      }\n      return componentRef;\n    };\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as RefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        if (!ref) {\n          // component has been unmounted\n          return;\n        }\n        if (ref !== this._componentRef) {\n          this._componentRef = this._resolveComponentRef(ref);\n          // if ref is changed, reset viewInfo\n          this._viewInfo = undefined;\n        }\n        const tag = this.getComponentViewTag();\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (layout || entering || exiting || sharedTransitionTag) {\n          if (!SHOULD_BE_USE_WEB) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n          if (exiting && isFabric()) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              updateLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !isFabric() && !skipEntering && !IS_WEB) {\n            updateLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        this._componentDOMRef?.getBoundingClientRect !== undefined\n      ) {\n        return this._componentDOMRef.getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (IS_JEST) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        filteredProps.jestAnimatedProps = this.jestAnimatedProps;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = Array.isArray(filteredProps.style)\n          ? filteredProps.style.concat([{ visibility: 'hidden' }])\n          : {\n              ...(filteredProps.style ?? {}),\n              visibility: 'hidden', // Hide component until `componentDidMount` triggers\n            };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      const skipEntering = this.context?.current;\n      const nativeID =\n        skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n\n      const jestProps = IS_JEST\n        ? {\n            jestInlineStyle: this.props.style,\n            jestAnimatedStyle: this.jestAnimatedStyle,\n            jestAnimatedProps: this.jestAnimatedProps,\n          }\n        : {};\n\n      return (\n        <Component\n          nativeID={nativeID}\n          {...filteredProps}\n          {...jestProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  const animatedComponent = componentWithRef(\n    (\n      props: PropsWithoutRef<AnimatedComponentProps<InitialComponentProps>>,\n      ref: Ref<Component>\n    ) => (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    )\n  );\n\n  animatedComponent.displayName =\n    Component.displayName || Component.name || 'Component';\n\n  return animatedComponent;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}